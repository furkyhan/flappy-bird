using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class furky : MonoBehaviour
{
    public bool isDead;
    public float velocity = 1f;
    public Rigidbody2D rb2D;
    public GameManeger managerGame;
    
    void Update()
    {       //tıklama kodu
        if (Input.GetMouseButtonDown(0))
        {   //havada kuşu sıçratma kodu
            rb2D.velocity = Vector2.up * velocity;


        }
    }

    private void OnTriggerEnter2D(Collider2D collision)
    {

        if(collision.gameObject.name == "ScoreArea")
        {

            managerGame.UpdateScore();


        }

    }

    private void OnCollisionEnter2D(Collision2D collision)
    {

        if (collision.gameObject.tag == "DeathArea")
        {

            isDead = true;
            Time.timeScale = 0;
        }


    }
}

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Boru : MonoBehaviour
{

    public float speed;



    // Start is called before the first frame update
    private void Start()
    {
        Destroy(gameObject, 7);
    }

    // Update is called once per frame
    void FixedUpdate()
    {
        transform.position += Vector3.left * speed * Time.deltaTime;
        
    }
}

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Spawner : MonoBehaviour
{

    public furky BirdScript;

    public GameObject Borular;

    public float height ;

    private void Start()
    {
        StartCoroutine(SpawnObject());
    }

    // Update is called once per frame
    void Update()
    {
        
    }


    public IEnumerator SpawnObject()
    {
        while (!BirdScript.isDead) 
        { 
     
            Instantiate(Borular, new Vector3(3, Random.Range(-height, height), 0),Quaternion.identity);

            yield return new WaitForSeconds(1.75f);
        }

    }
}

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class GameManeger : MonoBehaviour
{

    public int score;
    public Text ScoreText;
    
    void Start()
    {
        score = 0;
        ScoreText.text = score.ToString();
    }

    public void UpdateScore()
    {

        score++;
        ScoreText.text = score.ToString();
        
    }
}
